{"xref": {
  "beforeSteps": {},
  "stories": [
    {
      "story": {
        "path": "me/ederign/selenium/upload_view_story.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "",
          "iWantTo": ""
        },
        "meta": {
          "properties": [
          ]
        },
        "scenarios": [
          {
            "title": "test engineer wants to upload file to system",
            "meta": {
              "properties": [
              ]
            },
            "givenStories": {
              "givenStories": [
              ],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [
                ],
                "data": [
                ],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [
                ],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
              ],
              "data": [
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [
              ],
              "trim": true
            },
            "steps": [
              "Given a file to be uploaded",
              "Given that the 'Browse' button is clicked and /home/cc2012/ra139270/aoInfinitoEALEM is chosen",
              "Given that is a valid file",
              "When the 'Submeter' button is clicked",
              "Then the file is uploaded"
            ]
          }
        ],
        "name": "upload_view_story.story",
        "givenStories": {
          "givenStories": [
          ],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [
            ],
            "data": [
            ],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [
            ],
            "trim": true
          }
        }
      },
      "allowed": true,
      "givenStories": [
      ],
      "scenarios": [
        {
          "scenario": {
            "title": "test engineer wants to upload file to system",
            "meta": {
              "properties": [
              ]
            },
            "givenStories": {
              "givenStories": [
              ],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [
                ],
                "data": [
                ],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [
                ],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
              ],
              "data": [
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [
              ],
              "trim": true
            },
            "steps": [
              "Given a file to be uploaded",
              "Given that the 'Browse' button is clicked and /home/cc2012/ra139270/aoInfinitoEALEM is chosen",
              "Given that is a valid file",
              "When the 'Submeter' button is clicked",
              "Then the file is uploaded"
            ]
          },
          "allowed": true,
          "exampleScenarios": [
          ],
          "givenStories": [
          ],
          "beforeSteps": {},
          "steps": {
            "matches": [
              {
                "type": "GIVEN",
                "annotatedPattern": "a file to be uploaded",
                "resolvedPattern": "a\\s+file\\s+to\\s+be\\s+uploaded"
              },
              {
                "type": "GIVEN",
                "annotatedPattern": "that is a valid file",
                "resolvedPattern": "that\\s+is\\s+a\\s+valid\\s+file"
              },
              {
                "type": "WHEN",
                "annotatedPattern": "the 'Submeter' button is clicked",
                "resolvedPattern": "the\\s+'Submeter'\\s+button\\s+is\\s+clicked"
              }
            ],
            "results": [
              {
                "step": "Given a file to be uploaded",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a file to be uploaded",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:172)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:604)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:252)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:775)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:692)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:600)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:590)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:309)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:289)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:222)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [
                    ],
                    [
                    ]
                  ],
                  "uuid": "a5f322a8-3de3-4d77-b9ce-eec76c8f5421"
                },
                "durationInMillis": 0
              },
              {
                "step": "Given that the 'Browse' button is clicked and /home/cc2012/ra139270/aoInfinitoEALEM is chosen",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given that the 'Browse' button is clicked and /home/cc2012/ra139270/aoInfinitoEALEM is chosen",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:172)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:608)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:280)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:775)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:692)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:600)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:590)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:309)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:289)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:222)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [
                    ],
                    [
                    ]
                  ],
                  "uuid": "555b358c-3d82-4b54-90fa-cad495c06101"
                },
                "durationInMillis": 0
              },
              {
                "step": "Given that is a valid file",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given that is a valid file",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:172)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:608)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:280)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:775)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:692)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:600)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:590)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:309)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:289)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:222)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [
                    ],
                    [
                    ]
                  ],
                  "uuid": "14cedcc4-9436-4e3f-8114-0542a63a29e9"
                },
                "durationInMillis": 0
              },
              {
                "step": "When the 'Submeter' button is clicked",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When the 'Submeter' button is clicked",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:172)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:608)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:280)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:775)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:692)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:600)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:590)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:309)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:289)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:222)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [
                    ],
                    [
                    ]
                  ],
                  "uuid": "6b5a1169-b6f5-498e-89bc-f958a54fea87"
                },
                "durationInMillis": 0
              },
              {
                "step": "Then the file is uploaded",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the file is uploaded",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:172)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:608)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:280)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:775)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:692)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:600)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:590)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:309)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:289)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:222)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [
                    ],
                    [
                    ]
                  ],
                  "uuid": "4f75bef2-eea5-48c2-bcea-51d91308ba05"
                },
                "durationInMillis": 0
              }
            ]
          },
          "afterSteps": {}
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 10
      }
    }
  ],
  "afterSteps": {}
}}